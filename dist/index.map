{"version":3,"sources":["0","config.js","services/mailing.js","services/index.js","latest-blog-post.js","send-contact-mail.js","../nuxt.config.js","index.js"],"names":["module","exports","name","author","description","homepage","version","license","scripts","assets:svg","build","build:nuxt","build:server","bump","dev","dev:watch","dev:serve","dev:mail","heroku-postbuild","release","serve:production","start","toc","repository","type","url","engines","node","yarn","dependencies","@hiswe/focus-ring","@hiswe/koa-nuxt","@nuxtjs/style-resources","@sindresorhus/slugify","axios","chalk","cheerio","consola","form-serialize","fs-extra","koa","koa-body","koa-compress","koa-helmet","koa-json","koa-logger","koa-router","koa-session","lodash","lodash.clonedeep","nodemailer","nuxt","pug","pug-plain-loader","rc","request","request-promise-native","shortid","source-map-support","validator","vue-axios","vue-recaptcha","xml2js","devDependencies","@types/node","cross-env","del","doctoc","gulp","gulp-bump","gulp-cheerio","gulp-if","gulp-load-plugins","gulp-rename","gulp-svg-symbols","gulp-svgmin","inquirer","maildev","node-sass","nodemon","npm-run-all","parcel-bundler","sass-loader","shelljs","svgo","vue","webpack","yargs","require","pkg","config","email","transport","host","port","ignoreTLS","options","from","captcha","site","secret","VERSION","HOST","process","env","PORT","NODE_ENV","isDev","isProd","transporter","provider","usedTransport","createTransport","mailLogger","withScope","mailingReady","Promise","resolve","reject","verify","then","ready","catch","error","console","log","util","inspect","colors","servicesReady","all","sendMail","mailingConnection","bind","parseXml","promisify","parseString","cleanSummary","summary","$","load","remove","each","index","element","$link","content","html","replaceWith","trim","getLatestBlogPost","atomResponse","get","status","ctx","body","atomJS","data","blogEntries","_","Array","isArray","map","post","link","title","cover","published","contactMail","contactLogger","reCAPTCHA_URL","formData","message","validation","valid","value","hasError","Object","values","field","includes","notification","captchaResponse","warn","captchaData","response","verifyCaptcha","method","uri","json","success","to","replyTo","text","NAME","IS_PROD","router","middleware","loading","color","height","css","modules","styleResources","scss","plugins","src","ssr","head","titleTemplate","meta","charset","hid","rel","href","script","async","defer","appLogger","errorLogger","app","Koa","keys","use","sessionsOptions","key","autoCommit","Nuxt","nuxtConfig","renderNuxt","builder","Builder","next","state","isJson","err","statusCode","nuxtError","code","reason","stacktrace","stack","req","serverData","Router","prefix","mailResponse","session","manuallyCommit","redirect","routes","allowedMethods","listen","cyan","fatal","red"],"mappings":"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","file":"index.map","sourceRoot":"../server","sourcesContent":[null,"'use strict'\n\nconst rc = require('rc')\n\nconst pkg = require('../package.json')\n\nconst config = rc(`hiswe`, {\n  email: {\n    transport: {\n      host: `localhost`,\n      port: 1025,\n      // Maildev config for Nodemailer\n      // • https://danfarrelly.nyc/MailDev/#configure\n      ignoreTLS: true,\n    },\n    options: {\n      from: `Mr contact dev <contact@hiswe.pouic>`,\n    },\n  },\n  captcha: {\n    site: `YA95hSdXYUBPKEOAAeknyzAoOAAaW-6QbdULO`,\n    secret: `d09CKWf64EV7LmUVZnyBUW6Py5Hf67jUCDAAAAAU`,\n  },\n})\n\nconfig.VERSION = pkg.version\n\nconfig.HOST = config.HOST || process.env.HOST || `127.0.0.1`\nconfig.PORT = config.PORT || process.env.PORT || 3000\n\nconfig.NODE_ENV = config.NODE_ENV || process.env.NODE_ENV || `development`\nconfig.isDev = config.NODE_ENV === `development`\nconfig.isProd = config.NODE_ENV === `production`\n\nmodule.exports = config\n","import nodemailer from 'nodemailer'\n\nimport config from '../config'\n\nconst { transport, provider } = config.email\nconst usedTransport = provider ? provider : transport\nconst transporter = nodemailer.createTransport(usedTransport)\n\nexport default transporter\n","import util from 'util'\nimport consola from 'consola'\n\nimport config from '../config'\nimport mailingConnection from './mailing'\n\nconst mailLogger = consola.withScope(`MAIL`)\n\n//----- MAILING CONNECTION\n\nconst mailingReady = new Promise((resolve, reject) => {\n  mailingConnection\n    .verify()\n    .then(() => {\n      mailLogger.ready(`transport creation – SUCCESS`)\n      resolve()\n    })\n    .catch(error => {\n      mailLogger.error(`transport creation – ERROR`)\n      console.log(util.inspect(error, { colors: true }))\n      console.log(`original config`)\n      console.log(config.email)\n      reject(`[MAILING] connection failed`)\n    })\n})\n\n//----- CHECKS\n\nexport const servicesReady = Promise.all([mailingReady])\n\nexport const sendMail = mailingConnection.sendMail.bind(mailingConnection)\n","'use strict'\n\nimport util from 'util'\nimport axios from 'axios'\nimport _ from 'lodash'\nimport xml2js from 'xml2js'\nimport cheerio from 'cheerio'\n\nconst parseXml = util.promisify(xml2js.parseString)\n\nfunction cleanSummary(summary) {\n  const $ = cheerio.load(summary)\n  $(`h2`).remove()\n  $(`a`).each((index, element) => {\n    const $link = $(element)\n    const content = $link.html()\n    $link.replaceWith(`<span>${content}</span>`)\n  })\n  return $(`body`)\n    .html()\n    .trim()\n}\n\nexport default async function getLatestBlogPost() {\n  const atomResponse = await axios.get(`https://hiswe.github.io/atom.xml`)\n  if (!atomResponse.status === 200) return (ctx.body = [{}])\n\n  const atomJS = await parseXml(atomResponse.data)\n  const blogEntries = _.get(atomJS, `feed.entry`)\n  if (!Array.isArray(blogEntries)) return (ctx.body = [{}])\n\n  return blogEntries.map(post => {\n    const link = _.get(post, `link[0].$.href`)\n    const summary = _.get(post, `summary[0]._`)\n    return {\n      title: _.get(post, `title[0]`),\n      link: link,\n      cover: `${link}cover.png`,\n      published: _.get(post, `published[0]`),\n      summary: cleanSummary(summary),\n    }\n  })\n}\n","import c from 'chalk'\nimport isEmail from 'validator/lib/isEmail'\nimport isEmpty from 'validator/lib/isEmpty'\nimport util from 'util'\nimport request from 'request-promise-native'\nimport consola from 'consola'\n\nimport config from './config'\nimport { sendMail } from './services'\n\nconst contactLogger = consola.withScope(`CONTACT`)\nconst reCAPTCHA_URL = `https://www.google.com/recaptcha/api/siteverify`\n\nasync function contactMail(formData) {\n  // field validation\n  const { email, message } = formData\n  const validation = {\n    email: {\n      valid: isEmail(email),\n      value: email,\n    },\n    message: {\n      valid: !isEmpty(message),\n      value: message,\n    },\n  }\n  const hasError = Object.values(validation)\n    .map(field => field.valid)\n    .includes(false)\n  if (hasError) {\n    contactLogger.error(`validation error`)\n    return {\n      validation,\n      notification: {\n        content: `you need to fill the form`,\n        type: `error`,\n      },\n    }\n  }\n\n  // re-captcha\n  const captchaResponse = formData[`g-recaptcha-response`]\n  if (!captchaResponse) {\n    contactLogger.warn(`no captcha`)\n    return {\n      validation: validation,\n      notification: {\n        content: `javascript needs to be enabled`,\n        type: `error`,\n      },\n    }\n  }\n\n  const captchaData = {\n    secret: config.captcha.secret,\n    response: captchaResponse,\n  }\n  const verifyCaptcha = await request({\n    method: `POST`,\n    uri: reCAPTCHA_URL,\n    formData: captchaData,\n    json: true,\n  })\n\n  console.log(util.inspect(verifyCaptcha, { colors: true }))\n\n  if (!verifyCaptcha.success) {\n    return {\n      validation: validation,\n      notification: {\n        content: `a validation error has occurred. Please try again`,\n        type: `error`,\n      },\n    }\n  }\n\n  try {\n    await sendMail({\n      from: config.email.options.from,\n      to: config.email.options.from,\n      replyTo: email,\n      text: message,\n    })\n  } catch (error) {\n    console.log(util.inspect(error, { colors: true }))\n    return {\n      validation,\n      notification: {\n        content: `an error as occurred while sending the mail. Please try again`,\n        type: `error`,\n      },\n    }\n  }\n  return {\n    validation,\n    notification: { content: `message send`, type: `info` },\n  }\n}\n\nexport default contactMail\n","import pkg from './package.json'\nimport rc from 'rc'\n\nconst config = rc(`hiswe`)\n\nconst NAME = `hiswe website`\nconst IS_PROD = process.env.NODE_ENV === `production`\n// const IS_DEV = !isProd\n\nexport default {\n  router: {\n    middleware: [`reset-form`, `handle-server-errors`],\n  },\n  loading: {\n    color: `hsl(332, 100%, 50%)`,\n    height: `5px`,\n  },\n  css: [\n    `@/nuxt-assets/css/global.scss`,\n    `@/nuxt-assets/css/page-transitions.scss`,\n  ],\n  modules: [`@nuxtjs/style-resources`],\n  styleResources: {\n    scss: [\n      `@/nuxt-assets/css/scss-vars.scss`,\n      `@/nuxt-assets/css/scss-mixin.scss`,\n    ],\n  },\n  plugins: [\n    `@/nuxt-plugins/global-components.js`,\n    { src: `@/nuxt-plugins/browser.js`, ssr: false },\n  ],\n  head: {\n    titleTemplate: 'Hiswe – %s',\n    meta: [\n      { charset: `utf-8` },\n      { name: `viewport`, content: `width=device-width, initial-scale=1` },\n      { 'http-equiv': `X-UA-Compatible`, content: `IE=edge` },\n      { hid: `author`, name: `author`, content: pkg.author },\n      { hid: `description`, name: `description`, content: pkg.description },\n      // open graph\n      { hid: `og:title`, name: `og:title`, content: NAME },\n      { hid: `og:type`, name: `og:type`, content: `website` },\n      {\n        hid: `og:description`,\n        name: `og:description`,\n        content: pkg.description,\n      },\n      { hid: `og:url`, name: `og:url`, content: pkg.homepage },\n      // twitter\n      { hid: `twitter:card`, name: `twitter:card`, content: `summary` },\n      { hid: `twitter:site`, name: `twitter:site`, content: `@hiswehalya` },\n      {\n        hid: `twitter:creator`,\n        name: `twitter:creator`,\n        content: `@hiswehalya`,\n      },\n    ],\n    link: [{ rel: `icon`, type: `image/png`, href: `/favicon.png` }],\n    script: [\n      {\n        src: `https://www.google.com/recaptcha/api.js?onload=vueRecaptchaApiLoaded&render=explicit`,\n        async: true,\n        defer: true,\n      },\n    ],\n  },\n}\n","import chalk from 'chalk'\nimport Koa from 'koa'\nimport helmet from 'koa-helmet'\nimport compress from 'koa-compress'\nimport logger from 'koa-logger'\nimport formatJson from 'koa-json'\nimport Router from 'koa-router'\nimport koaBody from 'koa-body'\nimport consola from 'consola'\nimport { Nuxt, Builder } from 'nuxt'\nimport util from 'util'\nimport session from 'koa-session'\nimport koaNuxt from '@hiswe/koa-nuxt'\n\nimport config from './config'\nimport { servicesReady } from './services'\nimport getLatestBlogPost from './latest-blog-post'\nimport sendContactMail from './send-contact-mail'\nimport nuxtConfig from '../nuxt.config.js'\n\nconst appLogger = consola.withScope(`APP`)\nconst errorLogger = consola.withScope(`ERROR`)\n\nasync function start() {\n  //////\n  // SERVER CONFIG\n  //////\n\n  const app = new Koa()\n\n  // for signed cookies\n  app.keys = [\n    `e05fa6f6e4c078ad997ec324e6d69f59829b2e2237c5e1d9e3610fea291793f4`,\n    `64241b9838c5d0d5f94f7e83c71d83af4674f8c84e406a138263a8803a3b1e6f`,\n  ]\n\n  app.use(helmet())\n  app.use(compress())\n  app.use(logger())\n  app.use(formatJson())\n\n  const sessionsOptions = {\n    key: `hiswe-website`,\n    autoCommit: false,\n  }\n\n  app.use(session(sessionsOptions, app))\n\n  //----- NUXT HANDLING\n\n  // Instantiate nuxt.js\n  nuxtConfig.dev = config.isDev\n  const nuxt = new Nuxt(nuxtConfig)\n  // create the nuxt middleWare\n  const renderNuxt = koaNuxt(nuxt)\n\n  // Build in development\n  if (nuxtConfig.dev) {\n    appLogger.warn(`SPA build for dev`)\n    const builder = new Builder(nuxt)\n    await builder.build()\n  }\n\n  //----- ERROR HANDLING\n\n  app.use(async (ctx, next) => {\n    ctx.state.isJson = ctx.request.type === `application/json`\n    await next()\n  })\n\n  app.use(async (ctx, next) => {\n    try {\n      await next()\n    } catch (err) {\n      errorLogger.error(`one of the next middleware has errored`)\n      console.log(util.inspect(err, { colors: true }))\n      ctx.status = err.statusCode || err.status || 500\n      const nuxtError = {\n        code: ctx.status,\n        reason: err.message,\n        stacktrace: err.stacktrace || err.stack || false,\n      }\n      if (ctx.state.isJson) {\n        errorLogger.error(`serving json response`)\n        return (ctx.body = {\n          notification: {\n            content: nuxtError.reason,\n            type: `error`,\n          },\n        })\n      }\n      ctx.req.serverData = {\n        error: {\n          statusCode: ctx.status,\n          message: err.message,\n        },\n      }\n      try {\n        errorLogger.error(`serving nuxt response`)\n        await renderNuxt(ctx)\n      } catch (nuxtError) {\n        errorLogger.error(`serving nuxt response failed`)\n        ctx.body = `nuxt error`\n      }\n    }\n  })\n\n  //////\n  // API ROUTING\n  //////\n\n  //----- API\n\n  const router = new Router({ prefix: `/api` })\n\n  router.get(`/latest-blog-post`, async ctx => {\n    const blogEntries = await getLatestBlogPost()\n    ctx.body = blogEntries\n  })\n\n  router.post(`/contact`, koaBody(), async ctx => {\n    const mailResponse = await sendContactMail(ctx.request.body)\n    if (ctx.state.isJson) return (ctx.body = mailResponse)\n    ctx.session = mailResponse\n    await ctx.session.manuallyCommit()\n    ctx.redirect(`/`)\n  })\n\n  //----- MOUNT ROUTER TO APPLICATION\n\n  app.use(router.routes())\n  app.use(router.allowedMethods())\n\n  //////\n  // NUXT FALLBACK\n  //////\n\n  app.use(async (ctx, next) => {\n    const session = ctx.session || {}\n    // useful for nuxtServerInit\n    ctx.req.serverData = {\n      validation: session.validation,\n      notification: session.notification,\n      captcha: config.captcha.site,\n    }\n    // flush session\n    // –> make session act like flash messages\n    ctx.session = {}\n    await ctx.session.manuallyCommit()\n    await next()\n  })\n\n  app.use(renderNuxt)\n\n  //////\n  // LAUNCHING\n  //////\n\n  try {\n    await servicesReady\n    app.listen(config.PORT, config.HOST, function endInit() {\n      appLogger.start(\n        `server is listening on`,\n        chalk.cyan(`${config.HOST}:${config.PORT}`),\n        `on mode`,\n        chalk.cyan(config.NODE_ENV)\n      )\n    })\n  } catch (error) {\n    appLogger.fatal(chalk.red(`not launched – needed services errored`))\n    console.log(error)\n  }\n}\n\nstart()\n"]}