@import 'nib/vendor'
@import 'nib/positions'
@import '../css-config'
@import '../css-mixins'
@import './panel-transitions'

.hw-panels-open
  perspective 1000px
  perspective-origin center center

.hw-sub-container
  display inline-block
  width third(); height px2em($panel-height)
  position relative
  top 0; z-index 1
  margin-bottom 0
  transform-style preserve-3d
  panel-out()

  a
    color $dark-blue

    &:hover
      color $light-blue

  .hicon
    font-size 6em
    // Transform doesn't work on inline display
    display inline-block
    iso-right()
    icon-out()
    color $dark-pink

  .hw-sub-close
    opacity 0
    close-out()

  .hw-sub
    overflow hidden
    visibility hidden
    height 100%; width @height
    box-sizing border-box
    absolute top left
    z-index 1
    slide-out()

  .hw-sub-default
    z-index 3
    visibility visible
    default-out()

  &:nth-child(3n+1),
  &:nth-child(3n+3)
    .hw-sub-default
      background $pink
      iso-left()

  &:nth-child(3n+2)
    .hw-sub-default
      iso-right()
      background $dark-pink

    .hicon
      iso-left()
      color $pink

  &:nth-child(3n+2),
  &:nth-child(3n+3)
    .hw-sub-left
      left -100% // Reposition panel for scroll issues on firefox
      transform rotateY(98.75deg)
      // 1% difference is for nice edge aliasis
      transform-origin 101% 50%

  &:nth-child(3n+1),
  &:nth-child(3n+2)
    .hw-sub-right
      left 100% // Reposition panel for scroll issues on firefox
      transform-origin -1% 50%
      transform rotateY(-98.75deg)

  &:nth-child(3n+2) .hw-sub-left,
  &:nth-child(3n+3) .hw-sub-left,
  &:nth-child(3n+1) .hw-sub-right,
  &:nth-child(3n+2) .hw-sub-right
    rotate-out()

  &.{activeClass}
    height px2em($panel-height*1.5)
    top (px2em($panel-height) - @height) * 1.5
    margin-bottom (px2em($panel-height) - @height) * 2
    z-index 10
    panel-in()

    .hicon
      icon-in()
      iso-reset()
      font-size 12em
      color $dark-gray

    .hw-sub-close
      close-in()
      opacity 1

    .hw-sub
      visibility visible
      transform rotateY(0) !important
      slide-in()

    .hw-sub-default
      default-in()

    &:nth-child(3n+2) .hw-sub-left,
    &:nth-child(3n+3) .hw-sub-left,
    &:nth-child(3n+1) .hw-sub-right,
    &:nth-child(3n+2) .hw-sub-right
      rotate-in()


for num in 1 2 3
  .{activeClass}:nth-child(3n+{num}) .hw-sub-close
    left unit((4 - num) * 100, '%')

  // active positioning
  .{activeClass}:nth-child(3n+{num})
    .hw-sub-left
      left unit((1 - num) * 100, '%')

    .hw-sub-default
      left unit((2 - num) * 100, '%')

    .hw-sub-right
      left unit((3 - num) * 100, '%')
